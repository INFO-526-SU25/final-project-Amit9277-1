{
  "hash": "ff4b7f17fcd14028e0de8697b8f044e5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Q1 Solution\"\nauthor: \"Amit Chawla\"\nformat:\n  html:\n    embed-resources: true\ntoc: true\nexecute:\n  warning: false\n  message: false\n  error: false\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!require(\"pacman\")) \n  install.packages(\"pacman\")\n\npacman::p_load(tidyverse,\n               janitor,\n               scales,\n               stringr,\n               ggthemes,\n               ggrepel,\n               patchwork,\n               grid)\n\n# set theme for ggplot2\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 20))\n\n# set width of code output\noptions(width = 65)\n\n# set figure parameters for knitr\nknitr::opts_chunk$set(\n  fig.width = 11, # 11\" width\n  fig.asp = 0.618, # the golden ratio\n  fig.retina = 3, # dpi multiplier for displaying HTML output on retina\n  fig.align = \"center\", # center align figures\n  dpi = 300 # higher dpi, sharper image\n)\n```\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load('2025-01-21')\n\nexped_tidy <- tuesdata$exped_tidy\npeaks_tidy <- tuesdata$peaks_tidy\n\n\nexped_tidy_cleaned <- clean_names(exped_tidy)\npeaks_tidy_cleaned <- clean_names(peaks_tidy)\n\npivoted_data <- exped_tidy_cleaned |>\n  pivot_longer(\n    cols = c(route1, route2, route3, route4, success1, success2, success3, success4),\n    names_to = c(\".value\", \"index\"),\n    names_pattern = \"(route|success)(\\\\d+)\"\n  )\n\npivoted_data <- pivoted_data |>\n  filter(!is.na(route))\n\npivoted_data <- pivoted_data |>\n  mutate(route = str_replace_all(route, \"S Col SE Ridge\", \"S Col-SE Ridge\"))\n\nsummary_data <- pivoted_data |>\n  group_by(peakid) |>\n  summarize(\n    attempts = n(),\n    success_rate = (mean(success, na.rm = TRUE) * 100), # This remains NUMERIC for fill aesthetic\n    .groups = 'drop' # Good practice to drop grouping after summarize\n  ) |>\n  arrange(desc(attempts)) |>\n  slice_head(n = 4)\n\n# Create a SEPARATE column for the label, formatted as a character string\nsummary_data$success_rate_label <- sprintf(\"%.1f%%\", summary_data$success_rate)\n\n# Join with peaks_tidy_cleaned to get peak names, keeping original peakid\nsummary_data <- summary_data |>\n  left_join(select(peaks_tidy_cleaned, peakid, pkname), by = \"peakid\")\n\nggplot(summary_data, aes(x = reorder(pkname, -attempts), y = success_rate, fill = attempts)) +\n  geom_col() +\n  geom_text(aes(label = success_rate_label),\n            vjust = -0.5,  # Position above bars\n            color = \"black\") +\n  scale_fill_viridis_c(\n    option = \"viridis\",\n    name = \"Number of Attempts\"\n  ) +\n  coord_cartesian(ylim = c(0, 100)) +  # Success rate is in percent (0-100)\n  labs(\n    x = \"Peaks\",\n    y = \"Success Rate (%)\",\n    title = \"Success Rate of Top 4 Peaks Attempted by all Nations\",\n    subtitle = \"Bar height indicates success rate; color indicates attempts\",\n    caption = \"Source: https://github.com/rfordatascience/tidytuesday\"\n  ) +\n  theme_minimal(base_size = 14)\n```\n\n::: {.cell-output-display}\n![](Q1-Sol_files/figure-html/Data Load, prep, First Visualization-1.png){fig-align='center' width=3300}\n:::\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nselected_peaks <- c(\"EVER\", \"AMAD\", \"LHOT\", \"MANA\", \"HIML\")\n\npivoted_data_cleaned <- pivoted_data |>\n  filter(!is.na(route) & !is.na(nation))\n\nsummary_data_with_combined_key <- pivoted_data_cleaned |>\n  group_by(peakid, route, nation) |>\n  summarize(\n    attempts_on_route_per_nation = n(),\n    success_rate_on_route = (mean(success, na.rm = TRUE) * 100),\n    .groups = 'drop'\n  ) |>\n  mutate(peakid_route = paste(peakid, route, sep = \" - \")) |>\n  arrange(peakid, route, desc(attempts_on_route_per_nation))\n\never_df <- summary_data_with_combined_key |>\n  filter(peakid == 'EVER')\n\n# Calculate total attempts per nation across all routes\ntotal_attempts <- ever_df |>\n  group_by(nation)|>\n  summarise(total_attempts = sum(attempts_on_route_per_nation)) |>\n  slice_max(order_by = total_attempts, n = 3)\n\n# Get the top 3 nations\ntop_nations <- total_attempts$nation\n\n# Filter the dataframe to include only the top 3 nations\never_top3 <- ever_df |> \n  filter(nation %in% top_nations)\n\nprint(ever_top3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  peakid route                     nation attempts_on_route_per…¹\n  <chr>  <chr>                     <chr>                    <int>\n1 EVER   N Col-NE Ridge            China                        9\n2 EVER   N Col-NE Ridge            USA                          2\n3 EVER   N Face (Hornbein Couloir) USA                          1\n4 EVER   S Col-SE Ridge            Nepal                       39\n5 EVER   S Col-SE Ridge            USA                         31\n6 EVER   S Col-SE Ridge            China                       11\n# ℹ abbreviated name: ¹​attempts_on_route_per_nation\n# ℹ 2 more variables: success_rate_on_route <dbl>,\n#   peakid_route <chr>\n```\n\n\n:::\n\n```{.r .cell-code}\n# Create the bubble chart\np1 <- ggplot(ever_top3, aes(x = route, y = success_rate_on_route)) +\n  geom_point(aes(color = attempts_on_route_per_nation, size = attempts_on_route_per_nation),\n             alpha = 0.7,\n             position = \"identity\") +\n  geom_text_repel(data = subset(ever_top3, attempts_on_route_per_nation >= 1),\n                  aes(label = nation, color = attempts_on_route_per_nation),\n                  size = 5,\n                  box.padding = 0.7,\n                  point.padding = 0.6,\n                  min.segment.length = Inf) +\n  scale_color_viridis_c(option = \"turbo\",\n                        name = \"Attempts on Route\",\n                        breaks = c(1, 10, 20, 30, 40),\n                        limits = c(0, 40),\n                        guide = \"none\") +\n  scale_size_continuous(range = c(3, 15),\n                        name = \"Attempts on Route\",\n                        breaks = c(10, 20, 30),\n                        limits = c(0, 40),\n                        guide = \"none\")+\n  annotate(\"text\", y = 125, x = 0.7, label = \"Everest\", size = 5, fontface = \"bold\") +\n  labs(x = NULL,\n       y = \"Success Rate (%)\") +\n  scale_y_continuous(breaks = seq(0, 100, by = 25)) +\n  scale_x_discrete(labels = label_wrap(10)) +\n  coord_cartesian(ylim = c(-5, 125)) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(hjust = 0.5, size = 9),\n    legend.position = \"none\"\n  )\n```\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\namad_df <- summary_data_with_combined_key |>\n  filter(peakid == 'AMAD')\n\n# Calculate total attempts per nation across all routes\ntotal_attempts <- amad_df |>\n  group_by(nation)|>\n  summarise(total_attempts = sum(attempts_on_route_per_nation)) |>\n  slice_max(order_by = total_attempts, n = 3)\n\n# Get the top 3 nations\ntop_nations <- total_attempts$nation\n\n# Filter the dataframe to include only the top 3 nations\namad_top3 <- amad_df |> \n  filter(nation %in% top_nations)\n\nprint(amad_top3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 6\n  peakid route    nation attempts_on_route_per_nation\n  <chr>  <chr>    <chr>                         <int>\n1 AMAD   N Ridge  USA                               1\n2 AMAD   SW Ridge USA                              23\n3 AMAD   SW Ridge UK                               21\n4 AMAD   SW Ridge Nepal                            11\n5 AMAD   W Face   Nepal                             1\n# ℹ 2 more variables: success_rate_on_route <dbl>,\n#   peakid_route <chr>\n```\n\n\n:::\n\n```{.r .cell-code}\n# Create the bubble chart\np2 <- ggplot(amad_top3, aes(x = route, y = success_rate_on_route)) +\n  geom_point(aes(color = attempts_on_route_per_nation, size = attempts_on_route_per_nation),\n             alpha = 0.7,\n             position = position_jitter(width = 0)) +\n  geom_text_repel(data = subset(amad_top3, attempts_on_route_per_nation >= 1),\n                  aes(label = nation, color = attempts_on_route_per_nation),\n                  size = 5,\n                  box.padding = 0.6,\n                  point.padding = 0.8,\n                  min.segment.length = Inf) +\n  scale_color_viridis_c(option = \"turbo\",\n                        name = \"Attempts on Route\",\n                        breaks = c(1, 10, 20, 30, 40),\n                        limits = c(0, 40),\n                        guide = \"none\") +\n  scale_size_continuous(range = c(3, 15),\n                        name = \"Attempts on Route\",\n                        breaks = c(10, 20, 30),\n                        limits = c(0, 40),\n                        guide = \"none\") +\n  annotate(\"text\", y = 120, x = 0.9, label = \"Ama Dablam\", size = 5, fontface = \"bold\") +\n  labs(x = NULL,\n       y = NULL) +\n  scale_y_continuous(breaks = seq(0, 100, by = 25)) + # Adjusted seq start to 0 for clarity\n  scale_x_discrete(labels = label_wrap(10)) +\n  coord_cartesian(ylim = c(-5, 120)) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(hjust = 0.5, size = 9),\n    legend.position = \"none\"\n  )\n```\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlhot_df <- summary_data_with_combined_key |>\n  filter(peakid == 'LHOT')\n\n# Calculate total attempts per nation across all routes\ntotal_attempts <- lhot_df |>\n  group_by(nation)|>\n  summarise(total_attempts = sum(attempts_on_route_per_nation)) |>\n  slice_max(order_by = total_attempts, n = 3)\n\n# Get the top 3 nations\ntop_nations <- total_attempts$nation\n\n# Filter the dataframe to include only the top 3 nations\nlhot_top3 <- lhot_df |> \n  filter(nation %in% top_nations)\n\nprint(lhot_top3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 6\n  peakid route        nation attempts_on_route_per_nation\n  <chr>  <chr>        <chr>                         <int>\n1 LHOT   S Col-W Face USA                              11\n2 LHOT   S Col-W Face India                             7\n3 LHOT   S Col-W Face Nepal                             6\n4 LHOT   W Face       Nepal                            11\n5 LHOT   W Face       India                            10\n6 LHOT   W Face       USA                               9\n# ℹ 2 more variables: success_rate_on_route <dbl>,\n#   peakid_route <chr>\n```\n\n\n:::\n\n```{.r .cell-code}\n# Create the bubble chart\np3 <- ggplot(lhot_top3, aes(x = route, y = success_rate_on_route)) +\n  geom_point(aes(color = attempts_on_route_per_nation, size = attempts_on_route_per_nation),\n             alpha = 0.6,\n             position = \"identity\") +\n  geom_text_repel(data = subset(lhot_top3, attempts_on_route_per_nation >= 1),\n                  aes(label = nation, color = attempts_on_route_per_nation),\n                  size = 5,\n                  box.padding = 0.6,\n                  point.padding = 0.8,\n                  min.segment.length = Inf,\n                  position = \"identity\") +\n  scale_color_viridis_c(option = \"turbo\",\n                        name = \"Attempts on Route\",\n                        breaks = c(1, 10, 20, 30, 40),\n                        limits = c(0, 40),\n                        guide = \"none\") +\n  scale_size_continuous(range = c(3, 15),\n                        name = \"Attempts on Route\",\n                        breaks = c(10, 20, 30),\n                        limits = c(0, 40),\n                        guide = \"none\")+\n  annotate(\"text\", y = 130, x = 0.6, label = \"Lhotse\", size = 5, fontface = \"bold\") +\n  labs(x = \"Route\",\n       y = \"Success Rate (%)\") +\n  scale_y_continuous(breaks = seq(0, 100, by = 25)) +\n  scale_x_discrete(labels = label_wrap(10)) +\n  coord_cartesian(ylim = c(-5, 130)) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(hjust = 0.5, size = 9),\n    legend.position = \"none\"\n  )\n```\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmana_df <- summary_data_with_combined_key |>\n  filter(peakid == 'MANA')\n\n# Calculate total attempts per nation across all routes\ntotal_attempts <- mana_df |>\n  group_by(nation)|>\n  summarise(total_attempts = sum(attempts_on_route_per_nation)) |>\n  slice_max(order_by = total_attempts, n = 3)\n\n# Get the top 3 nations\ntop_nations <- total_attempts$nation\n\n# Filter the dataframe to include only the top 3 nations\nmana_top3 <- mana_df |> \n  filter(nation %in% top_nations)\n\nprint(mana_top3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 6\n  peakid route   nation attempts_on_route_per_nation\n  <chr>  <chr>   <chr>                         <int>\n1 MANA   NE Face Nepal                            20\n2 MANA   NE Face USA                              10\n3 MANA   NE Face China                             6\n4 MANA   NE Face UK                                6\n# ℹ 2 more variables: success_rate_on_route <dbl>,\n#   peakid_route <chr>\n```\n\n\n:::\n\n```{.r .cell-code}\n# Create the bubble chart\np4 <- ggplot(mana_top3, aes(x = route, y = success_rate_on_route)) +\n  geom_point(aes(color = attempts_on_route_per_nation, size = attempts_on_route_per_nation),\n             alpha = 0.7,\n             position = \"identity\") +\n  geom_text_repel(data = subset(mana_top3, attempts_on_route_per_nation >= 1),\n                  aes(label = nation, color = attempts_on_route_per_nation),\n                  size = 5,\n                  box.padding = 0.6,\n                  point.padding = 0.8,\n                  min.segment.length = Inf,\n                  position = \"identity\") +\n  scale_color_viridis_c(option = \"turbo\",\n                        name = \"\\n\",\n                        breaks = c(1, 10, 20, 30, 40),\n                        limits = c(0, 40),\n                        guide = guide_colorbar(direction = \"horizontal\", title.position = \"top\")) +\n  scale_size_continuous(range = c(3, 15),\n                        name = \"                       Attempts on route metrix (size + color)\",\n                        breaks = c(1, 10, 20, 30, 40),\n                        limits = c(0, 40),\n                        guide = guide_legend(title.position = \"top\"))+\n  annotate(\"text\", y = 120, x = 0.55, label = \"Manaslu\", size = 5, fontface = \"bold\") +\n  labs (x = \"Route\",\n       y = NULL) +\n  scale_y_continuous(breaks = seq(0, 100, by = 25)) +\n  scale_x_discrete(labels = label_wrap(10)) +\n  coord_cartesian(ylim = c(-5, 120)) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(hjust = 0.5, size = 9),\n    legend.position = \"none\"\n  )\n```\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Combine plots with patchwork\ncombined_plot <- (p1 + p2) / (p3 + p4) +\n  plot_layout(guides = \"collect\") +\n  plot_annotation(\n    title = \"National Route Preferences and Success Rates\\nin High-Altitude Peak Expeditions (2020-2024)\",\n    subtitle = \"Bubble Size and Color Show Attempts, with Success Rates\\nfor Top 3 Nations Across Four Most Popular Peaks\",\n    caption = \"Source: https://github.com/rfordatascience/tidytuesday\",\n    theme = theme(\n      plot.title = element_text(face = \"bold\", size = 18, hjust = 0.2),\n      plot.subtitle = element_text(size = 14, hjust = 0.2),\n      plot.caption = element_text(size = 14)\n    )\n  ) &\n  theme(\n    legend.position = \"bottom\",\n    legend.box = \"horizontal\",\n    legend.title.align = 0.5,\n    #legend.margin = margin(t = 5, b = 5),\n    legend.title = element_text(size = 14)\n  )\n\nplot(combined_plot)\n```\n\n::: {.cell-output-display}\n![](Q1-Sol_files/figure-html/Combined all plots for second visualization-1.png){fig-align='center' width=3300}\n:::\n:::\n\n",
    "supporting": [
      "Q1-Sol_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}