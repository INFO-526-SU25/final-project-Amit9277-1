{
  "hash": "a6d3502dd436899cf0d39b77c2fcc003",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Q2_code\"\nformat:\n  html:\n    embed-resources: true\ntoc: true\nexecute:\n  warning: false\n  message: false\n  error: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n## install.packages(\"tidytuesdayR\")\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(forcats)\nlibrary(dplyr)\nlibrary(patchwork)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load('2025-01-21')\n\n#Although our two questions only use exped_tidy, we have added code to make a separate peaks_tidy in case we find out that we need variables from that dataframe later on.\n\nexped_tidy <- tuesdata$exped_tidy\n#peaks_tidy <- tuesdata$peaks_tidy\n\nexped_tidy <- clean_names(exped_tidy)\n#peaks_tidy <- clean_names(peaks_tidy)\n\nhead(exped_tidy, n=10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 69\n   expid     peakid  year season season_factor  host host_factor route1   route2\n   <chr>     <chr>  <dbl>  <dbl> <chr>         <dbl> <chr>       <chr>    <chr> \n 1 EVER20101 EVER    2020      1 Spring            2 China       N Col-N… <NA>  \n 2 EVER20102 EVER    2020      1 Spring            2 China       N Col-N… <NA>  \n 3 EVER20103 EVER    2020      1 Spring            2 China       N Col-N… <NA>  \n 4 AMAD20301 AMAD    2020      3 Autumn            1 Nepal       SW Ridge <NA>  \n 5 AMAD20302 AMAD    2020      3 Autumn            1 Nepal       SW Ridge <NA>  \n 6 AMAD20303 AMAD    2020      3 Autumn            1 Nepal       SW Ridge <NA>  \n 7 AMAD20304 AMAD    2020      3 Autumn            1 Nepal       SW Ridge <NA>  \n 8 AMAD20305 AMAD    2020      3 Autumn            1 Nepal       SW Ridge <NA>  \n 9 AMAD20306 AMAD    2020      3 Autumn            1 Nepal       SW Ridge <NA>  \n10 AMAD20307 AMAD    2020      3 Autumn            1 Nepal       SW Ridge <NA>  \n# ℹ 60 more variables: route3 <lgl>, route4 <lgl>, nation <chr>, leaders <chr>,\n#   sponsor <chr>, success1 <lgl>, success2 <lgl>, success3 <lgl>,\n#   success4 <lgl>, ascent1 <chr>, ascent2 <chr>, ascent3 <lgl>, ascent4 <lgl>,\n#   claimed <lgl>, disputed <lgl>, countries <chr>, approach <chr>,\n#   bcdate <date>, smtdate <date>, smttime <chr>, smtdays <dbl>, totdays <dbl>,\n#   termdate <date>, termreason <dbl>, termreason_factor <chr>, termnote <chr>,\n#   highpoint <dbl>, traverse <lgl>, ski <lgl>, parapente <lgl>, camps <dbl>, …\n```\n\n\n:::\n\n```{.r .cell-code}\n#head(peaks_tidy, n=10)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nexped_tidy <- exped_tidy |>\n  #mutate new columns\n  mutate(\n    \"pmdeaths\" = mdeaths/totmembers,\n    \"phdeaths\" = hdeaths/tothired,\n    \"totdeaths\" = (hdeaths+ mdeaths),\n    \"ptotdeaths\" = totdeaths/(tothired + totmembers)\n  )\n\n#filter for all epeditions with at least one death\nexped_tidy_deadly <- exped_tidy |>\n  filter(pmdeaths > 0 | phdeaths > 0) |>\n  filter(!is.na(agency))\n\n#create a subset dataframe that clears out unecessary columns\nexped_tidy_deadly <- exped_tidy_deadly |>\n  select(year, season_factor, host_factor, nation, agency, totmembers, smtmembers, mdeaths, tothired, hdeaths, totdeaths, pmdeaths, phdeaths, ptotdeaths)\nexped_tidy_deadly\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 37 × 14\n    year season_factor host_factor nation agency   totmembers smtmembers mdeaths\n   <dbl> <chr>         <chr>       <chr>  <chr>         <dbl>      <dbl>   <dbl>\n 1  2021 Spring        Nepal       USA    TAGnepa…         35         10       0\n 2  2021 Spring        Nepal       Russia 7 Summi…         15          7       0\n 3  2021 Spring        Nepal       India  Seven S…         37         22       2\n 4  2021 Spring        Nepal       China  Seven S…         13          9       0\n 5  2021 Autumn        Nepal       Nepal  TAGnepa…          5          0       1\n 6  2021 Autumn        Nepal       France Pralhad…          4          0       3\n 7  2022 Spring        Nepal       Greece Seven S…          7          3       1\n 8  2022 Spring        Nepal       USA    Beyul A…         10          8       0\n 9  2022 Spring        Nepal       Russia 7 Summi…         15         12       1\n10  2022 Spring        Nepal       Nepal  High Fi…          7          6       1\n# ℹ 27 more rows\n# ℹ 6 more variables: tothired <dbl>, hdeaths <dbl>, totdeaths <dbl>,\n#   pmdeaths <dbl>, phdeaths <dbl>, ptotdeaths <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#assigns deadly agencies to one tibble\ndeadly_agencies <- unique(exped_tidy_deadly$agency)\n\n#assigns non-deadly agencies to one tibble\nnon_deadly <- exped_tidy |>\n  filter(!agency %in% deadly_agencies)\nnon_deadly_agencies <- unique(non_deadly$agency)\n\n#prints out the length for each so that I can view these values. Will not be used for graphing\nlength(non_deadly_agencies)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 160\n```\n\n\n:::\n\n```{.r .cell-code}\nlength(deadly_agencies)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 22\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nexped_tidy_deadly |>\n  #graphs agency by number of fatal expeditions. fct_infreq was debugged consulting with AI after looking at documentation. Same with after_stat(count)\n  ggplot(aes(x = fct_rev(fct_infreq(agency)), fill = after_stat(count))) +\n  geom_bar() +\n  \n  #flips coordinates for better readbility of agencies\n  coord_flip() +\n  \n  #Increased number of breaks\n  scale_y_continuous(breaks = c(0, 2, 4, 6, 8, 10)) +\n  \n  #colored where red is more deadly. I wanted a low intensity representing an increasing intensity so I settled on yellow\n  scale_fill_gradient(low = \"#ffce00\", high = \"darkred\") +\n  \n  labs(\n    title = \"Number of expeditions through the Himalayas \\nthat resulted in death by Agency\",\n    subtitle = \"from 2021 - 2024\",\n    caption = \"Source: Tidytuesday\",\n    x = NULL,\n    y = \"Number of expeditions that resulted in at least one death\",\n    fill = NULL\n  ) +\n  theme_minimal() +\n  \n  #got rid of grid to improve readability\n  theme(\n    legend.position = \"none\",\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](Q2_code_files/figure-html/graph main-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#filtered for only 2021 data\ndeaths_2021 <- exped_tidy_deadly |>\n  filter(year == 2021)\ndeaths_2021\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 14\n   year season_factor host_factor nation agency    totmembers smtmembers mdeaths\n  <dbl> <chr>         <chr>       <chr>  <chr>          <dbl>      <dbl>   <dbl>\n1  2021 Spring        Nepal       USA    TAGnepal…         35         10       0\n2  2021 Spring        Nepal       Russia 7 Summit…         15          7       0\n3  2021 Spring        Nepal       India  Seven Su…         37         22       2\n4  2021 Spring        Nepal       China  Seven Su…         13          9       0\n5  2021 Autumn        Nepal       Nepal  TAGnepal…          5          0       1\n6  2021 Autumn        Nepal       France Pralhad …          4          0       3\n# ℹ 6 more variables: tothired <dbl>, hdeaths <dbl>, totdeaths <dbl>,\n#   pmdeaths <dbl>, phdeaths <dbl>, ptotdeaths <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\n#grouped to create the average percent deaths per agency\ndeaths_2021_av <- deaths_2021 %>%\n  #grouped by season for color reasons\n  group_by(agency, season_factor) %>%\n  #we used the average percent for the x axis to better compare between groups\n  summarise(avg_ptotdeaths = mean(ptotdeaths, na.rm = TRUE),\n            .groups = \"drop\")\ndeaths_2021_av\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  agency                                      season_factor avg_ptotdeaths\n  <chr>                                       <chr>                  <dbl>\n1 7 Summits Adventure                         Spring                0.0222\n2 Pralhad Chapagain (Freelancer at Expes.com) Autumn                0.75  \n3 Seven Summit Treks                          Spring                0.0356\n4 TAGnepal Trekking                           Spring                0.0118\n5 TAGnepal Trekking (Snowy Horizon pmt)       Autumn                0.111 \n```\n\n\n:::\n\n```{.r .cell-code}\n#raw death values, similar approach as above\ndeaths_2021_raw <- deaths_2021 |>\n  group_by(agency, season_factor) %>%\n  summarize(total_deaths = sum(totdeaths), .groups = \"drop\")\ndeaths_2021_raw\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  agency                                      season_factor total_deaths\n  <chr>                                       <chr>                <dbl>\n1 7 Summits Adventure                         Spring                   1\n2 Pralhad Chapagain (Freelancer at Expes.com) Autumn                   3\n3 Seven Summit Treks                          Spring                   3\n4 TAGnepal Trekking                           Spring                   1\n5 TAGnepal Trekking (Snowy Horizon pmt)       Autumn                   1\n```\n\n\n:::\n:::\n\n\n\n\n\n::: {.cell}\n\n```{.r2021 .cell-code}\n# label: 2021 percent death graph\n\ndeaths_2021_av |>\n  #graph by descending percent total deaths by agency. Color is for season\n  ggplot(aes(x = fct_reorder(agency, avg_ptotdeaths, .desc = FALSE), y = avg_ptotdeaths, fill = season_factor)) +\n  geom_col() +\n  \n  #set coordinates for better comparison between groups\n  coord_flip(ylim = c(0, 1)) +\n  \n  #colored based on majority season color association\n  scale_fill_manual(values = c(\"orange\", \"lightgreen\")) +\n  labs(\n    fill = \"Season\",\n    x = \"Trekking Agency\",\n    y = \"Total Death\",\n    title = \"Percent total deaths by Agency in 2021\",\n    caption = \"Source: TidyTuesday\",\n    subtitle = \"M is trekking member death, H is hired staff death\"\n  ) +\n  \n  #rename x values to have percent\n  scale_y_continuous(\n    breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1),\n    labels = c(\"0%\", \"20%\", \"40%\", \"60%\", \"80%\", \"100%\")\n  ) +\n  \n  #individual labels for each individual percent death rather than average and distingish it between member and hired staff\n  annotate(\"text\", y = 0.2, x = 1, label = \"M 6.6%\") +\n  annotate(\"text\", y = 0.2, x = 2, label = \"H 3.3%\") +\n  annotate(\"text\", y = 0.3, x = 3, label = \"Trek 1: M 54%\") +\n  annotate(\"text\", y = 0.7, x = 3, label = \"Trek 2: H 10%\") +\n  annotate(\"text\", y = 0.3, x = 4, label = \"M 20%\") +\n  annotate(\"text\", y = 0.4, x = 5, label = \"M 75%\") +\n  theme_minimal() +\n  \n  #cleaned up grid for better readability of annotations\n  theme(\n    axis.ticks.x = element_blank(),\n    panel.grid = element_blank()\n  )\n```\n:::\n\n\n\n\n\n::: {.cell labels='2021 raw death values'}\n\n```{.r .cell-code}\ndeaths_2021_raw |>\n  #same as above, except with total deaths and not percents\n  ggplot(aes(x = fct_reorder(agency, total_deaths, .desc = FALSE), y = total_deaths, fill = season_factor)) +\n  geom_col() +\n  \n  #sets coordinates for easier comparison between groups\n  coord_flip(ylim = c(0, 5)) +\n  \n  #colored same as above for easy comparison\n  scale_fill_manual(values = c(\"orange\", \"lightgreen\")) +\n  \n  labs(\n    fill = \"Season\",\n    x = \"Trekking Agency\",\n    y = \"Total Deaths\",\n    title = \"Percent total deaths by Agency in 2021\",\n    caption = \"Source: TidyTuesday\",\n    subtitle = \"M is trekking member death, H is hired staff death\"\n  ) +\n  \n  #set breaks\n  scale_y_continuous(\n    breaks = c(0, 1, 2, 3, 4, 5)\n  ) +\n  \n  #will not use this annotation after all\n  #annotate(\"text\", y = 2, x = 3, label = \"M 1\") +\n  #annotate(\"text\", y = 2, x = 2, label = \"H 1\") +\n  #annotate(\"text\", y = 2, x = 1, label = \"Trek 1: M 2\") +\n  #annotate(\"text\", y = 4, x = 1, label = \"Trek 2: H 1\") +\n  #annotate(\"text\", y = 4, x = 4, label = \"M 3\") +\n  #annotate(\"text\", y = 4, x = 5, label = \"M 3\") +\n  \n  #instead annotate with number of treks because most deaths were 1 or 2 total so the prior labels are somewhat superfulous and messy\n  annotate(\"text\", y = 4, x = 5, label = \"Total Treks: 2\") +\n  theme_minimal() +\n  \n  #clean grid for better readability\n  theme(\n    axis.ticks.x = element_blank(),\n    panel.grid = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](Q2_code_files/figure-html/2021 deaths raw-1.png){width=672}\n:::\n:::\n\n\n\n\n\nAll code below are copy and pasted of the graphs above witht the year and specific annotations changed.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndeaths_2022 <- exped_tidy_deadly |>\n  filter(year == 2022)\ndeaths_2022\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 14\n    year season_factor host_factor nation   agency totmembers smtmembers mdeaths\n   <dbl> <chr>         <chr>       <chr>    <chr>       <dbl>      <dbl>   <dbl>\n 1  2022 Spring        Nepal       Greece   Seven…          7          3       1\n 2  2022 Spring        Nepal       USA      Beyul…         10          8       0\n 3  2022 Spring        Nepal       Russia   7 Sum…         15         12       1\n 4  2022 Spring        Nepal       Nepal    High …          7          6       1\n 5  2022 Spring        Nepal       Nepal    Pione…         13          9       1\n 6  2022 Spring        Nepal       S Korea  Seven…          8          0       0\n 7  2022 Autumn        Nepal       Georgia  Sator…         16         12       1\n 8  2022 Autumn        Nepal       Netherl… Seven…         15          0       0\n 9  2022 Autumn        Nepal       USA      Shang…          5          2       1\n10  2022 Autumn        Nepal       USA      Sator…         10          0       0\n# ℹ 6 more variables: tothired <dbl>, hdeaths <dbl>, totdeaths <dbl>,\n#   pmdeaths <dbl>, phdeaths <dbl>, ptotdeaths <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\ndeaths_2022_av <- deaths_2022 %>%\n  group_by(agency, season_factor) %>%\n  summarise(avg_ptotdeaths = mean(ptotdeaths, na.rm = TRUE),\n            .groups = \"drop\")\ndeaths_2022_av\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 3\n  agency                                        season_factor avg_ptotdeaths\n  <chr>                                         <chr>                  <dbl>\n1 7 Summits Adventure                           Spring                0.0263\n2 Beyul Adventure                               Spring                0.0323\n3 High Five Adventures (Pioneer Adventures pmt) Spring                0.1   \n4 Pioneer Adventure                             Spring                0.0333\n5 Satori Adventures                             Autumn                0.0406\n6 Seven Summit Treks                            Autumn                0.0333\n7 Seven Summit Treks                            Spring                0.0565\n8 Shangri-La Nepal Treks                        Autumn                0.0833\n```\n\n\n:::\n\n```{.r .cell-code}\ndeaths_2022_raw <- deaths_2022 |>\n  group_by(agency, season_factor) %>%\n  summarize(total_deaths = sum(totdeaths), .groups = \"drop\")\ndeaths_2022_raw\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 3\n  agency                                        season_factor total_deaths\n  <chr>                                         <chr>                <dbl>\n1 7 Summits Adventure                           Spring                   1\n2 Beyul Adventure                               Spring                   1\n3 High Five Adventures (Pioneer Adventures pmt) Spring                   1\n4 Pioneer Adventure                             Spring                   1\n5 Satori Adventures                             Autumn                   2\n6 Seven Summit Treks                            Autumn                   1\n7 Seven Summit Treks                            Spring                   2\n8 Shangri-La Nepal Treks                        Autumn                   1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndeaths_2022_av |>\n  ggplot(aes(x = fct_reorder(agency, avg_ptotdeaths, .desc = FALSE), y = avg_ptotdeaths, fill = season_factor)) +\n  geom_col() +\n  coord_flip(ylim = c(0, 1)) +\n  scale_fill_manual(values = c(\"orange\", \"lightgreen\")) +\n  labs(\n    fill = \"Season\",\n    x = \"Trekking Agency\",\n    y = \"Total Percent Death (Average)\",\n    title = \"Percent total deaths by Agency in 2022\",\n    caption = \"Source: TidyTuesday\",\n    subtitle = \"M is trekking member death, H is hired staff death\"\n  ) +\n  scale_y_continuous(\n    breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1),\n    labels = c(\"0%\", \"20%\", \"40%\", \"60%\", \"80%\", \"100%\")\n  ) +\n  annotate(\"text\", y = 0.2, x = 1, label = \"H 20%\") +\n  annotate(\"text\", y = 0.2, x = 2, label = \"H 4.7%\") +\n  annotate(\"text\", y = 0.2, x = 3, label = \"M 7.6%\") +\n  annotate(\"text\", y = 0.3, x = 4, label = \"Trek 1: M 6.25%\") +\n  annotate(\"text\", y = 0.7, x = 4, label = \"Trek 2: H 10%\") +\n  annotate(\"text\", y = 0.32, x = 4.8, label = \"Trek 1: M 14.2%\") +\n  annotate(\"text\", y = 0.32, x = 5.2, label = \"Trek 2: H 6.25%\") +\n  annotate(\"text\", y = 0.8, x = 5, label = \"Trek 3: H 6.67%\") +\n  annotate(\"text\", y = 0.25, x = 6, label = \"M 20%\") +\n  annotate(\"text\", y = 0.3, x = 7, label = \"M 14.28%\") +\n  theme_minimal() +\n  theme(\n    axis.ticks.x = element_blank(),\n    panel.grid = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](Q2_code_files/figure-html/2022 Percent-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndeaths_2022_raw |>\n  ggplot(aes(x = fct_reorder(agency, total_deaths, .desc = FALSE), y = total_deaths, fill = season_factor)) +\n  geom_col() +\n  coord_flip(ylim = c(0, 5)) +\n  scale_fill_manual(values = c(\"orange\", \"lightgreen\")) +\n  labs(\n    fill = \"Season\",\n    x = \"Trekking Agency\",\n    y = \"Total Percent Death (Average)\",\n    title = \"Percent total deaths by Agency in 2022\",\n    caption = \"Source: TidyTuesday\",\n    subtitle = \"M is trekking member death, H is hired staff death\"\n  ) +\n  scale_y_continuous(\n    breaks = c(0, 1, 2, 3, 4, 5)\n  ) +\n  #annotate(\"text\", y = 2, x = 1, label = \"M 1\") +\n  #annotate(\"text\", y = 2, x = 2, label = \"H 1\") +\n  #annotate(\"text\", y = 2, x = 3, label = \"M 1\") +\n  #annotate(\"text\", y = 2, x = 4, label = \"M 1\") +\n  #annotate(\"text\", y = 2, x = 5, label = \"M 1\") +\n  #annotate(\"text\", y = 1, x = 6, label = \"Trek 1: M 1\") +\n  #annotate(\"text\", y = 2.7, x = 6, label = \"Trek 2: H 1\") +\n  #annotate(\"text\", y = 4.5, x = 6, label = \"Trek 3: H 1\") +\n  #annotate(\"text\", y = 1, x = 7, label = \"Trek 1: M 1\") +\n  #annotate(\"text\", y = 3, x = 7, label = \"Trek 2: H 1\") +\n  annotate(\"text\", y = 4, x = 6, label = \"Total Treks: 3\") +\n  annotate(\"text\", y = 3, x = 7, label = \"Total Treks: 2\") +\n  theme_minimal() +\n  theme(\n    axis.ticks.x = element_blank(),\n    panel.grid = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](Q2_code_files/figure-html/2022 Raw-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndeaths_2023 <- exped_tidy_deadly |>\n  filter(year == 2023)\ndeaths_2023\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 15 × 14\n    year season_factor host_factor nation   agency totmembers smtmembers mdeaths\n   <dbl> <chr>         <chr>       <chr>    <chr>       <dbl>      <dbl>   <dbl>\n 1  2023 Spring        Nepal       Pakistan Seven…         21         12       1\n 2  2023 Spring        Nepal       Nepal    Imagi…         15         10       0\n 3  2023 Spring        Nepal       USA      Beyul…          6          3       1\n 4  2023 Spring        Nepal       USA      Himal…         19         12       1\n 5  2023 Spring        Nepal       Nepal    Asian…         13         10       2\n 6  2023 Spring        Nepal       China    8K Ex…         17          6       1\n 7  2023 Spring        Nepal       Denmark  Seven…         30         14       2\n 8  2023 Spring        Nepal       India    Pione…         15          6       2\n 9  2023 Spring        Nepal       Vietnam  Exped…         10          3       1\n10  2023 Spring        Nepal       France   Glaci…          5          1       1\n11  2023 Spring        Nepal       Nepal    Annap…          1          0       1\n12  2023 Spring        Nepal       Nepal    Peak …          8          5       0\n13  2023 Spring        Nepal       Germany  Seven…         16          8       1\n14  2023 Autumn        Nepal       Czech R… 14 Su…          6          2       1\n15  2023 Autumn        Nepal       Russia   Himal…          3          0       1\n# ℹ 6 more variables: tothired <dbl>, hdeaths <dbl>, totdeaths <dbl>,\n#   pmdeaths <dbl>, phdeaths <dbl>, ptotdeaths <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\ndeaths_2023_av <- deaths_2023 %>%\n  group_by(agency, season_factor) %>%\n  summarise(avg_ptotdeaths = mean(ptotdeaths, na.rm = TRUE),\n            .groups = \"drop\")\ndeaths_2023_av\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 3\n   agency                 season_factor avg_ptotdeaths\n   <chr>                  <chr>                  <dbl>\n 1 14 Summits             Autumn                0.167 \n 2 8K Expeditions         Spring                0.0270\n 3 Annapurna Treks        Spring                1     \n 4 Asian Trekking         Spring                0.05  \n 5 Beyul Adventure        Spring                0.0476\n 6 Expedition Himalaya    Spring                0.0333\n 7 Glacier Himalaya Treks Spring                0.1   \n 8 Himalayan Guides       Autumn                0.333 \n 9 Himalayan Guides       Spring                0.0204\n10 Imagine Nepal          Spring                0.0667\n11 Peak Promotion         Spring                0.125 \n12 Pioneer Adventure      Spring                0.0667\n13 Seven Summit Treks     Spring                0.0281\n```\n\n\n:::\n\n```{.r .cell-code}\ndeaths_2023_raw <- deaths_2023 |>\n  group_by(agency, season_factor) %>%\n  summarize(total_deaths = sum(totdeaths), .groups = \"drop\")\ndeaths_2023_raw\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 3\n   agency                 season_factor total_deaths\n   <chr>                  <chr>                <dbl>\n 1 14 Summits             Autumn                   1\n 2 8K Expeditions         Spring                   1\n 3 Annapurna Treks        Spring                   2\n 4 Asian Trekking         Spring                   2\n 5 Beyul Adventure        Spring                   1\n 6 Expedition Himalaya    Spring                   1\n 7 Glacier Himalaya Treks Spring                   1\n 8 Himalayan Guides       Autumn                   1\n 9 Himalayan Guides       Spring                   1\n10 Imagine Nepal          Spring                   3\n11 Peak Promotion         Spring                   2\n12 Pioneer Adventure      Spring                   2\n13 Seven Summit Treks     Spring                   4\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndeaths_2023_av |>\n  ggplot(aes(x = fct_reorder(agency, avg_ptotdeaths, .desc = FALSE), y = avg_ptotdeaths, fill = season_factor)) +\n  geom_col() +\n  coord_flip(ylim = c(0, 1)) +\n  scale_fill_manual(values = c(\"orange\", \"lightgreen\")) +\n  labs(\n    fill = \"Season\",\n    x = \"Trekking Agency\",\n    y = \"Total Percent Death (Average)\",\n    title = \"Percent total deaths by Agency in 2023\",\n    caption = \"Source: TidyTuesday\",\n    subtitle = \"M is trekking member death, H is hired staff death\"\n  ) +\n  scale_y_continuous(\n    breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1),\n    labels = c(\"0%\", \"20%\", \"40%\", \"60%\", \"80%\", \"100%\")\n  ) +\n  annotate(\"text\", y = 0.2, x = 1, label = \"M 5.8%\") +\n  annotate(\"text\", y = 0.2, x = 2, label = \"Trek 1: M 4.7%\") +\n  annotate(\"text\", y = 0.5, x = 2, label = \"Trek 2: M 6.7%\") +\n  annotate(\"text\", y = 0.8, x = 2, label = \"Trek 3: 6.3%\") +\n  annotate(\"text\", y = 0.2, x = 3, label = \"M 10%\") +\n  annotate(\"text\", y = 0.2, x = 4, label = \"M 1.66%\") +\n  annotate(\"text\", y = 0.2, x = 5, label = \"M 15.3%\") +\n  annotate(\"text\", y = 0.2, x = 6, label = \"H 10%\") +\n  annotate(\"text\", y = 0.2, x = 7, label = \"M 13.3%\") +\n  annotate(\"text\", y = 0.2, x = 8, label = \"M 20%\") +\n  annotate(\"text\", y = 0.23, x = 9, label = \"H 25%\") +\n  annotate(\"text\", y = 0.25, x = 10, label = \"M 16.7%\") +\n  annotate(\"text\", y = 0.5, x = 11, label = \"Trek 1: M 5.3%\") +\n  annotate(\"text\", y = 0.8, x = 11, label = \"Trek 2: M 33.3%\") +\n  annotate(\"text\", y = 0.5, x = 12, label = \"M 100%\") +\n  theme_minimal() +\n  theme(\n    axis.ticks.x = element_blank(),\n    panel.grid = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](Q2_code_files/figure-html/2023 Percent-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndeaths_2023_raw |>\n  ggplot(aes(x = fct_reorder(agency, total_deaths, .desc = FALSE), y = total_deaths, fill = season_factor)) +\n  geom_col() +\n  coord_flip(ylim = c(0, 5)) +\n  scale_fill_manual(values = c(\"orange\", \"lightgreen\")) +\n  labs(\n    fill = \"Season\",\n    x = \"Trekking Agency\",\n    y = \"Total Death\",\n    title = \"Total deaths by Agency in 2023\",\n    caption = \"Source: TidyTuesday\",\n    subtitle = \"M is trekking member death, H is hired staff death\"\n  ) +\n  scale_y_continuous(\n    breaks = c(0, 1, 2, 3, 4, 5)\n  ) +\n  annotate(\"text\", y = 3, x = 6, label = \"Total Treks: 2\") +\n  annotate(\"text\", y = 3, x = 12, label = \"Total Treks: 3\") +\n  theme_minimal() +\n  theme(\n    axis.ticks.x = element_blank(),\n    panel.grid = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](Q2_code_files/figure-html/2023 Raw-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndeaths_2024 <- exped_tidy_deadly |>\n  filter(year == 2024)\ndeaths_2024\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 14\n   year season_factor host_factor nation  agency   totmembers smtmembers mdeaths\n  <dbl> <chr>         <chr>       <chr>   <chr>         <dbl>      <dbl>   <dbl>\n1  2024 Spring        Nepal       Italy   Seven S…         22         12       1\n2  2024 Spring        Nepal       Ukraine 8K Expe…         36         29       4\n3  2024 Spring        Nepal       Nepal   Yeti Ad…          2          1       1\n4  2024 Spring        Nepal       UK      Makalu …         15          7       1\n5  2024 Spring        Nepal       Nepal   Seven S…         27         15       0\n6  2024 Spring        Nepal       France  Snowy H…         10          5       1\n# ℹ 6 more variables: tothired <dbl>, hdeaths <dbl>, totdeaths <dbl>,\n#   pmdeaths <dbl>, phdeaths <dbl>, ptotdeaths <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\ndeaths_2024_av <- deaths_2024 %>%\n  group_by(agency, season_factor) %>%\n  summarise(avg_ptotdeaths = mean(ptotdeaths, na.rm = TRUE),\n            .groups = \"drop\")\ndeaths_2024_av\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  agency              season_factor avg_ptotdeaths\n  <chr>               <chr>                  <dbl>\n1 8K Expeditions      Spring                0.0581\n2 Makalu Adventure    Spring                0.0333\n3 Seven Summit Treks  Spring                0.0279\n4 Snowy Horizon Treks Spring                0.0370\n5 Yeti Adventure      Spring                0.333 \n```\n\n\n:::\n\n```{.r .cell-code}\ndeaths_2024_raw <- deaths_2024 |>\n  group_by(agency, season_factor) %>%\n  summarize(total_deaths = sum(totdeaths), .groups = \"drop\")\ndeaths_2024_raw\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  agency              season_factor total_deaths\n  <chr>               <chr>                <dbl>\n1 8K Expeditions      Spring                   5\n2 Makalu Adventure    Spring                   1\n3 Seven Summit Treks  Spring                   3\n4 Snowy Horizon Treks Spring                   1\n5 Yeti Adventure      Spring                   1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndeaths_2024_av |>\n  ggplot(aes(x = fct_reorder(agency, avg_ptotdeaths, .desc = FALSE), y = avg_ptotdeaths, fill = season_factor)) +\n  geom_col() +\n  coord_flip(ylim = c(0, 1)) +\n  scale_fill_manual(values = \"lightgreen\") +\n  labs(\n    fill = \"Season\",\n    x = \"Trekking Agency\",\n    y = \"Total Percent Death (Average)\",\n    title = \"Percent total deaths by Agency in 2024\",\n    caption = \"Source: TidyTuesday\",\n    subtitle = \"M is trekking member death, H is hired staff death\"\n  ) +\n  scale_y_continuous(\n    breaks = c(0, 0.2, 0.4, 0.6, 0.8, 1),\n    labels = c(\"0%\", \"20%\", \"40%\", \"60%\", \"80%\", \"100%\")\n  ) +\n  annotate(\"text\", y = 0.2, x = 2, label = \"M 6.7%\") +\n  annotate(\"text\", y = 0.3, x = 1, label = \"Trek 1: M 4.5% H 3.3%\") +\n  annotate(\"text\", y = 0.7, x = 1, label = \"Trek 2: H 3.2%\") +\n  annotate(\"text\", y = 0.2, x = 3, label = \"M 10%\") +\n  annotate(\"text\", y = 0.2, x = 4, label = \"M 11.1% H 2%\") +\n  annotate(\"text\", y = 0.5, x = 5, label = \"M 50%\") +\n  theme_minimal() +\n  theme(\n    axis.ticks.x = element_blank(),\n    panel.grid = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](Q2_code_files/figure-html/2024 Percent-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndeaths_2024_raw |>\n  ggplot(aes(x = fct_reorder(agency, total_deaths, .desc = FALSE), y = total_deaths, fill = season_factor)) +\n  geom_col() +\n  coord_flip(ylim = c(0, 5)) +\n  scale_fill_manual(values = c(\"lightgreen\")) +\n  labs(\n    fill = \"Season\",\n    x = \"Trekking Agency\",\n    y = \"Total Death\",\n    title = \"Total deaths by Agency in 2024\",\n    caption = \"Source: TidyTuesday\",\n    subtitle = \"M is trekking member death, H is hired staff death\"\n  ) +\n  scale_y_continuous(\n    breaks = c(0, 1, 2, 3, 4, 5)\n  ) +\n  annotate(\"text\", y = 4, x = 4, label = \"Total Treks: 2\") +\n  theme_minimal() +\n  theme(\n    axis.ticks.x = element_blank(),\n    panel.grid = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](Q2_code_files/figure-html/2024 Raw-1.png){width=672}\n:::\n:::\n\n\n\n\n\nWas not able to use patchwork to combine graphs due to different y values\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#combined_plot <- wrap_plots(percent_2021, raw_2021, percent_2022, raw_2022, percent_2023, raw_2023, percent_2024, raw_2024, ncol = 2) \n\n#combined_plot\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#final_2021 <- (percent_2021 + raw_2021)\n#final_2021\n```\n:::\n",
    "supporting": [
      "Q2_code_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}